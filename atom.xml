<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>鱼da王</title>
  
  <subtitle>追随像风一样自由</subtitle>
  <link href="https://blog.smallgolden.com/atom.xml" rel="self"/>
  
  <link href="https://blog.smallgolden.com/"/>
  <updated>2020-09-30T10:34:25.748Z</updated>
  <id>https://blog.smallgolden.com/</id>
  
  <author>
    <name>FishKing</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>怎么写可测试代码？为什么写可测试代码是重要的呢？</title>
    <link href="https://blog.smallgolden.com/2020/09/25/%E3%80%90%E8%AF%91%E3%80%91%E6%80%8E%E4%B9%88%E5%86%99%E5%A5%BD%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E5%8F%8A%E5%85%B6%E9%87%8D%E8%A6%81%E6%80%A7/"/>
    <id>https://blog.smallgolden.com/2020/09/25/%E3%80%90%E8%AF%91%E3%80%91%E6%80%8E%E4%B9%88%E5%86%99%E5%A5%BD%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E5%8F%8A%E5%85%B6%E9%87%8D%E8%A6%81%E6%80%A7/</id>
    <published>2020-09-25T03:29:53.388Z</published>
    <updated>2020-09-30T10:34:25.748Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近 leader 在要求每次开发新需求时同时要编写单元测试，之前很少会写单元测试，对单元测试的理解比较浅，刚好看到一篇介绍比较细致的文章。那就容我用蹩脚的英语翻译一下（英文很棒的同学直接到本文尾部访问原文链接吧），和大家一起讨论学习下。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>SpringBoot-Oauth2.0（三） —— Token 的存储方案</title>
    <link href="https://blog.smallgolden.com/2020/09/01/SpringBoot-oauth%20(%E4%B8%89)-%20Token%20%E7%9A%84%E5%AD%98%E5%82%A8%E6%96%B9%E6%A1%88/"/>
    <id>https://blog.smallgolden.com/2020/09/01/SpringBoot-oauth%20(%E4%B8%89)-%20Token%20%E7%9A%84%E5%AD%98%E5%82%A8%E6%96%B9%E6%A1%88/</id>
    <published>2020-09-01T15:34:50.693Z</published>
    <updated>2020-09-30T10:31:55.954Z</updated>
    
    
    <summary type="html">&lt;p&gt;上一篇，我们把 Token 放到了关系型数据库当中存储，如果你的系统对认证接口响应时间要求很高，那么在关系型数据库中，查询 Token，一定会是一个瓶颈。那么怎么办呢？如果仅从存储 Token 方面考虑，有什么可以替代关系型数据的存储呢？&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>SpringBoot-Oauth2.0（二）—— client 及 token 存放到数据库</title>
    <link href="https://blog.smallgolden.com/2020/08/31/SpringBoot-Oauth2.0%EF%BC%88%E4%BA%8C%EF%BC%89-%20client%20%E5%8F%8A%20token%20%E5%AD%98%E6%94%BE%E5%88%B0%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>https://blog.smallgolden.com/2020/08/31/SpringBoot-Oauth2.0%EF%BC%88%E4%BA%8C%EF%BC%89-%20client%20%E5%8F%8A%20token%20%E5%AD%98%E6%94%BE%E5%88%B0%E6%95%B0%E6%8D%AE%E5%BA%93/</id>
    <published>2020-08-31T10:19:56.404Z</published>
    <updated>2020-09-30T10:32:17.540Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://juejin.im/post/6865971696017833997&quot;&gt;上一篇&lt;/a&gt;我们已经用最简单的方式，搭建了一个授权方式是 client_credentials 的 Oauth2 的流程。那么现在，在此基础上，我们就再往前迈一步，我们把 client 信息和 token 存储到数据库当中，方便我们管理。并且密码需要保证安全，那么就需要加密。目标很明确，那我们开始吧！&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>SpringBoot-Oauth2.0（一） —— 初识</title>
    <link href="https://blog.smallgolden.com/2020/08/26/SpringBoot-Oauth2.0%EF%BC%88%E4%B8%80%EF%BC%89%20-%20%E5%88%9D%E8%AF%86/"/>
    <id>https://blog.smallgolden.com/2020/08/26/SpringBoot-Oauth2.0%EF%BC%88%E4%B8%80%EF%BC%89%20-%20%E5%88%9D%E8%AF%86/</id>
    <published>2020-08-26T06:39:21.105Z</published>
    <updated>2020-09-30T10:32:31.892Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近在搞平台 API 的安全和认证的相关东西，接口安全和认证在生产活动中是非常重要的。目前最流行的就是 Oauth2 的认证方式。接下来就用 SpringBoot 的安全依赖简单实践一下，了解一下 Oauth2 的流程。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Zuul 的路由匹配</title>
    <link href="https://blog.smallgolden.com/2020/08/19/Zuul%E7%9A%84%E8%B7%AF%E7%94%B1%E5%8C%B9%E9%85%8D/"/>
    <id>https://blog.smallgolden.com/2020/08/19/Zuul%E7%9A%84%E8%B7%AF%E7%94%B1%E5%8C%B9%E9%85%8D/</id>
    <published>2020-08-19T08:49:08.114Z</published>
    <updated>2020-09-30T10:18:57.500Z</updated>
    
    
    <summary type="html">&lt;p&gt;上一篇，我们已经知道了  Zuul 的配置，其中 Zuul 的路由匹配也是核心配置之一，那 Zuul 是怎么匹配我们的请求，从而让我们的请求进入到一系列的 ZuulFilter 呢？那就和我一起去刨一刨吧。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Zuul 的配置</title>
    <link href="https://blog.smallgolden.com/2020/08/06/Zuul%E9%85%8D%E7%BD%AE/"/>
    <id>https://blog.smallgolden.com/2020/08/06/Zuul%E9%85%8D%E7%BD%AE/</id>
    <published>2020-08-06T09:19:49.884Z</published>
    <updated>2020-09-30T10:19:33.796Z</updated>
    
    
    <summary type="html">&lt;p&gt;这一篇主要介绍Zuul的配置。为了大家快速上手，主要通过示例来演示如何进行Zuul配置。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>SpringCloud 整合 Zuul 源码分析</title>
    <link href="https://blog.smallgolden.com/2020/07/21/SpringCloud%E6%95%B4%E5%90%88Zuul%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>https://blog.smallgolden.com/2020/07/21/SpringCloud%E6%95%B4%E5%90%88Zuul%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</id>
    <published>2020-07-20T16:35:07.380Z</published>
    <updated>2020-09-30T10:30:44.275Z</updated>
    
    
    <summary type="html">&lt;p&gt;今天我们分析下 SpringCloud 是怎么整合 Zuul 的。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Zuul 的源码分析</title>
    <link href="https://blog.smallgolden.com/2020/07/21/Zuul%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>https://blog.smallgolden.com/2020/07/21/Zuul%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</id>
    <published>2020-07-20T16:34:26.621Z</published>
    <updated>2020-09-30T10:29:37.112Z</updated>
    
    
    <summary type="html">&lt;p&gt;Zuul 的源码读过吗？让我们一起看看吧&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Hytrix线程池设置坑</title>
    <link href="https://blog.smallgolden.com/2020/07/14/Hytrix%E7%BA%BF%E7%A8%8B%E6%B1%A0%E8%AE%BE%E7%BD%AE%E5%9D%91/"/>
    <id>https://blog.smallgolden.com/2020/07/14/Hytrix%E7%BA%BF%E7%A8%8B%E6%B1%A0%E8%AE%BE%E7%BD%AE%E5%9D%91/</id>
    <published>2020-07-14T03:45:16.635Z</published>
    <updated>2020-09-30T10:15:57.669Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近遇到修改 Hytrix 线程池配置，不生效的情况。然后发现了一些坑。。。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
